name: Tests

on:
  pull_request:
    branches: [ "main" ]
    paths:
      - '**.py'
      - 'pyproject.toml'
      - '.github/workflows/**'
  push:
    branches: [ "main" ]
    paths:
      - '**.py'
      - 'pyproject.toml'
      - '.github/workflows/**'

jobs:
  test:
    name: Run Python Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ github.token }}

      - name: Setup uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          python-version: "3.12"

      - name: Install dockerize
        run: |
            wget https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz
            sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-v0.6.1.tar.gz
            rm dockerize-linux-amd64-v0.6.1.tar.gz

      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          uv pip install --system ".[dev]"

      - name: Wait for PostgreSQL
        run: |
          dockerize -wait tcp://localhost:5432 -timeout 1m

      - name: Run tests
        env:
          ENVIRONMENT: test
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        run: |
          source .venv/bin/activate
          echo "Running tests..."
          pytest tests/ -v
