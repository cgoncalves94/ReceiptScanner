[project]
name = "app"
version = "0.1.0"
description = ""
requires-python = ">=3.10,<4.0"
dependencies = [
    "fastapi[standard]>=0.115.11",
    "python-multipart>=0.0.20",
    "email-validator>=2.1.0.post1",
    "passlib[bcrypt]>=1.7.4",
    "tenacity>=9.0.0",
    "pydantic>=2.10.6",
    "emails>=0.6",
    "jinja2>=3.1.5",
    "alembic>=1.14.1",
    "httpx>=0.25.1",
    "psycopg[binary]>=3.2.5",
    "sqlmodel>=0.0.23",
    "bcrypt>=4.3.0",
    "pydantic-settings>=2.8.1",
    "sentry-sdk[fastapi]>=2.22.0",
    "pyjwt>=2.8.0",
    "uvicorn>=0.33.0",
    "pydantic-ai>=0.0.31",
    "pillow>=11.1.0",
    "opencv-python>=4.11.0.86",
    "python-dotenv>=1.0.1",
    "google-cloud-vision>=3.10.0",
    "google-generativeai>=0.8.4",
    "python-jose>=3.4.0",
    "asyncpg>=0.29.0"
]

[tool.hatch.build.targets.wheel]
packages = ["app"]

[project.optional-dependencies]
dev-dependencies = [
    "pytest>=8.3.5",
    "mypy>=1.15.0",
    "ruff>=0.9.9",
    "pre-commit>=4.1.0",
    "types-passlib>=1.7.7.20241221",
    "coverage>=7.6.12",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.mypy]
strict = true
exclude = ["venv", ".venv", "alembic"]

[tool.ruff]
target-version = "py310"
exclude = ["alembic"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
